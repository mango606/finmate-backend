<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.finmate.auth.mapper.RefreshTokenMapper">

    <!-- Refresh Token 삽입 -->
    <insert id="insertRefreshToken" parameterType="com.example.finmate.auth.domain.RefreshTokenVO">
        INSERT INTO tbl_refresh_token (
            user_id, refresh_token, expiry_time, is_valid, ip_address, user_agent, created_date, last_used_date
        ) VALUES (
                     #{userId}, #{refreshToken}, #{expiryTime}, #{isValid}, #{ipAddress}, #{userAgent}, #{createdDate}, #{lastUsedDate}
                 )
    </insert>

    <!-- Refresh Token 조회 -->
    <select id="getRefreshToken" resultType="com.example.finmate.auth.domain.RefreshTokenVO">
        SELECT token_id, user_id, refresh_token, expiry_time, is_valid, ip_address, user_agent, created_date, last_used_date
        FROM tbl_refresh_token
        WHERE refresh_token = #{refreshToken}
          AND is_valid = true
          AND expiry_time > NOW()
    </select>

    <!-- 사용자의 Refresh Token 목록 조회 -->
    <select id="getRefreshTokensByUserId" resultType="com.example.finmate.auth.domain.RefreshTokenVO">
        SELECT token_id, user_id, refresh_token, expiry_time, is_valid, ip_address, user_agent, created_date, last_used_date
        FROM tbl_refresh_token
        WHERE user_id = #{userId}
          AND is_valid = true
          AND expiry_time > NOW()
        ORDER BY created_date DESC
    </select>

    <!-- Refresh Token 무효화 -->
    <update id="invalidateRefreshToken">
        UPDATE tbl_refresh_token
        SET is_valid = false
        WHERE refresh_token = #{refreshToken}
    </update>

    <!-- 사용자의 모든 Refresh Token 무효화 -->
    <update id="invalidateAllRefreshTokensByUserId">
        UPDATE tbl_refresh_token
        SET is_valid = false
        WHERE user_id = #{userId}
    </update>

    <!-- 만료된 Refresh Token 삭제 -->
    <delete id="deleteExpiredRefreshTokens">
        DELETE FROM tbl_refresh_token
        WHERE expiry_time &lt; NOW()
           OR is_valid = false
    </delete>

    <!-- Refresh Token 사용 시간 업데이트 -->
    <update id="updateLastUsedTime">
        UPDATE tbl_refresh_token
        SET last_used_date = NOW()
        WHERE refresh_token = #{refreshToken}
    </update>

    <!-- 사용자별 활성 Refresh Token 개수 조회 -->
    <select id="getActiveTokenCount" resultType="int">
        SELECT COUNT(*)
        FROM tbl_refresh_token
        WHERE user_id = #{userId}
          AND is_valid = true
          AND expiry_time > NOW()
    </select>

    <!-- 오래된 Refresh Token 삭제 (사용자당 최대 개수 유지) -->
    <delete id="deleteOldestTokensForUser">
        DELETE FROM tbl_refresh_token
        WHERE token_id IN (
            SELECT token_id FROM (
                                     SELECT token_id
                                     FROM tbl_refresh_token
                                     WHERE user_id = #{userId}
                                       AND is_valid = true
                                     ORDER BY created_date ASC
                                         LIMIT 999999 OFFSET #{keepCount}
                                 ) AS old_tokens
        )
    </delete>

</mapper>